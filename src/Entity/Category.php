<?php

namespace App\Entity;

use App\Repository\CategoryRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity(repositoryClass=CategoryRepository::class)
 * @ORM\Entity
 * @ORM\Table(name="category")
 */
class Category extends CreatedAndUpdated
{
    /**
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     */
    private $id;

    /**
     * @ORM\Column(type="string", length=255)
     */
    private $name;

    public function __construct()
    {
        $this->title = new ArrayCollection();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    public function __toString()
    {
        return $this->name;
    }

    public function getCreated(): ?\DateTimeInterface
    {
        return parent::getCreated(); // TODO: Change the autogenerated stub
    }

    public function setCreated(\DateTimeInterface $created): CreatedAndUpdated
    {
        return parent::setCreated($created); // TODO: Change the autogenerated stub
    }

    public function getUpdated(): ?\DateTimeInterface
    {
        return parent::getUpdated(); // TODO: Change the autogenerated stub
    }

    public function setUpdated(\DateTimeInterface $updated): CreatedAndUpdated
    {
        parent::setUpdated($updated); // TODO: Change the autogenerated stub
    }


}
